/*
Deployment script for Pusulam

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Pusulam"
:setvar DefaultFilePrefix "Pusulam"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Disabling all DDL triggers...'
GO
DISABLE TRIGGER ALL ON DATABASE
GO
PRINT N'Creating [dbo].[KazanimDosya]...';


GO
CREATE TABLE [dbo].[KazanimDosya] (
    [ID_KAZANIMDOSYA] INT           IDENTITY (1, 1) NOT NULL,
    [KOD]             VARCHAR (MAX) NOT NULL,
    [GUID]            VARCHAR (36)  NOT NULL,
    [AKTIF]           BIT           NOT NULL,
    [KYE_TCKIMLIKNO]  VARCHAR (MAX) NOT NULL,
    [KYE_TARIH]       DATETIME      NOT NULL,
    CONSTRAINT [PK_KazanimDosya] PRIMARY KEY CLUSTERED ([ID_KAZANIMDOSYA] ASC)
);


GO
PRINT N'Creating [dbo].[DF_KazanimDosya_KYE_TARIH]...';


GO
ALTER TABLE [dbo].[KazanimDosya]
    ADD CONSTRAINT [DF_KazanimDosya_KYE_TARIH] DEFAULT (getdate()) FOR [KYE_TARIH];


GO
PRINT N'Creating [dbo].[DF_KazanimDosya_AKTIF]...';


GO
ALTER TABLE [dbo].[KazanimDosya]
    ADD CONSTRAINT [DF_KazanimDosya_AKTIF] DEFAULT ((1)) FOR [AKTIF];


GO
PRINT N'Altering [dbo].[sp_DersUnite]...';


GO
ALTER procedure [dbo].[sp_DersUnite]
	@TCKIMLIKNO			NVARCHAR(11)	    = NULL,
	@TC_OGRENCI			NVARCHAR(11)	    = '',
	@OTURUM				NVARCHAR(36)	    = NULL,
	@ISLEM				INT					= NULL,
	@ID_MENU			INT					= NULL,
	@ID_KADEME3         INT                 = NULL,
	@ID_DERS            INT                 = NULL,
	@ID_DERSUNITE       INT                 = NULL,
	@ID_KAZANIMDOSYA	INT                 = NULL,
	@AD                 NVARCHAR(250)       = NULL,
	@KOD                NVARCHAR(20)        = NULL,
	@DONEM              NVARCHAR(4)         = NULL,
	@LINKLIST           NVARCHAR(MAX)		= NULL,
	@SQLJSON            NVARCHAR(MAX)		= NULL
AS
BEGIN

BEGIN TRY    
	DECLARE @MSG			VARCHAR(4000)
	DECLARE @ErrorSeverity	INT
	DECLARE @ErrorState		INT
		
	DECLARE @return_variable INT
	EXEC @return_variable = [dbo].[sp_OturumKontrol] @OTURUM = @OTURUM, @TCKIMLIKNO = @TCKIMLIKNO, @ID_MENU = @ID_MENU

	IF @return_variable = 1
	BEGIN
	    IF @ISLEM = 1	--	Sınav Ders Liste		
		BEGIN					
			SELECT d.ID_DERS, d.AD FROM [dbo].[v3SinavDers] d where d.ID_KADEME3=@ID_KADEME3 
	    END
		IF @ISLEM = 2	--	Ders ünite listesi		
		BEGIN	

			SELECT ISNULL((
				SELECT	 D1.ID_DERS
						,D1.ID_DERSUNITE
						,D1.KOD
						,D1.AD
						,LINKLIST = ISNULL((SELECT LINK
											FROM OKYANUSDB.DBO.v3SinavDersUniteLink L
											WHERE	L.KOD	= D1.KOD
												AND L.AKTIF = 1
											FOR JSON PATH, INCLUDE_NULL_VALUES
										),'[{"LINK":""}]')
						,DOSYASAYISI = (SELECT COUNT(1) FROM KazanimDosya KD WHERE KD.KOD = D1.KOD AND KD.AKTIF = 1)
				FROM v3SinavDersUnite		D1
				inner join v3SinavDers		SD  ON SD.ID_DERS = D1.ID_DERS
				WHERE SD.ID_KADEME3=@ID_KADEME3 AND  D1.ID_DERS = @ID_DERS AND D1.AKTIF=1
				ORDER BY d1.KOD
				FOR JSON PATH, INCLUDE_NULL_VALUES
			),'[]')


		END
		IF @ISLEM = 3	--	unite silme				
		BEGIN		
			
			IF EXISTS (select TOP 1 1 from OKYANUSDB.DBO.v3SinavDersUnite U JOIN SinavAnahtar SA ON SA.KOD=U.KOD where ID_DERSUNITE=@ID_DERSUNITE)
			BEGIN
				RAISERROR ('Daha önce bir sınavda kullanıldığı için silinemez' , -- Message text.
				16, -- Severity.
				1-- State.
				);
			END
			ELSE
			BEGIN
				DELETE OKYANUSDB.DBO.v3SinavDersUnite
				WHERE ID_DERSUNITE=@ID_DERSUNITE			
			END



			--Update OKYANUSDB.DBO.v3SinavDersUnite SET AKTIF=0  where  ID_DERSUNITE=@ID_DERSUNITE AND 
		END
	    IF @ISLEM = 4	--	unite detay				
		BEGIN		
			select * from OKYANUSDB.DBO.v3SinavDersUnite where ID_DERSUNITE=@ID_DERSUNITE
		END
	    IF @ISLEM = 5	--	unite güncelle			
		BEGIN		
			
			UPDATE OKYANUSDB.DBO.v3SinavDersUnite
			SET AD= @AD--, KOD = @KOD
			WHERE ID_DERSUNITE=@ID_DERSUNITE

			SET @KOD = ( SELECT KOD FROM OKYANUSDB.DBO.v3SinavDersUnite WHERE ID_DERSUNITE = @ID_DERSUNITE )
			
			UPDATE OKYANUSDB.DBO.v3SinavDersUniteLink SET
				AKTIF = 0 
			WHERE KOD = @KOD

			INSERT INTO  OKYANUSDB.DBO.v3SinavDersUniteLink (KOD, LINK, KYE_TCKIMLIKNO) 
			SELECT @KOD, LINK, @TCKIMLIKNO FROM OPENJSON(@LINKLIST) WITH (LINK VARCHAR(MAX))


		END
		IF @ISLEM = 6	--	unite ekle				
		BEGIN
			
			IF EXISTS (select TOP 1 1 from OKYANUSDB.DBO.v3SinavDersUnite  where KOD=@KOD)
			BEGIN
				RAISERROR ('Bu kod daha önce eklenmiştir.' , -- Message text.
				16, -- Severity.
				1-- State.
				);
			END
			ELSE
			BEGIN
				INSERT INTO  OKYANUSDB.DBO.v3SinavDersUnite (ID_DERS, KOD, AD) values (@ID_DERS, @KOD, @AD)		

				UPDATE OKYANUSDB.DBO.v3SinavDersUniteLink SET
					AKTIF = 0 
				WHERE KOD = @KOD

				INSERT INTO  OKYANUSDB.DBO.v3SinavDersUniteLink (KOD, LINK, KYE_TCKIMLIKNO) 
				SELECT @KOD, LINK, @TCKIMLIKNO FROM OPENJSON(@LINKLIST) WITH (LINK VARCHAR(MAX))

			END

		END
		IF @ISLEM = 7	--	Genel Ders Liste		
		BEGIN
		
			IF EXISTS (SELECT TOP 1 1 FROM v3AktifDonem WHERE DONEM=@DONEM)
			BEGIN
				DECLARE @SIRA INT=	(SELECT SIRA FROM v3Kademe3 WHERE ID_KADEME3 =  @ID_KADEME3 )
				SET @ID_KADEME3 =	(SELECT ID_KADEME3 FROM v3Kademe3 WHERE SIRA=@SIRA  - (CAST((SELECT DONEM FROM v3AktifDonem WHERE AKTIF = 1) AS INT) - CAST(@DONEM AS INT)))
			END
			

			IF @ID_KADEME3 IS NULL OR @ID_KADEME3=0
			BEGIN
				SELECT ID_KADEME3 INTO #KADEME3 FROM v3KullaniciKademe3 WHERE TCKIMLIKNO=@TCKIMLIKNO
				
					SELECT SD.ID_DERS, SD.AD 
					FROM v3SinavDers				SD
					INNER JOIN eokul_v2.dbo.Ders	D	ON	D.ID_DERS = SD.ID_DERS
					WHERE	SD.ID_KADEME3 IN (SELECT ID_KADEME3 FROM #KADEME3)		
						AND D.AKTIF = 1 
						AND D.SNVDERS = 1
				UNION 
					SELECT D.ID_DERS,D.DERSAD 
					FROM eokul_v2.dbo.Ders			 D
					JOIN eokul_v2.dbo.DersEgitimTuru E ON E.ID_DERS = D.ID_DERS
					WHERE E.ID_EGITIMTURU = 6 -- YAZILI
						AND D.AKTIF =1 
						AND D.SNVDERS = 1
						AND d.ID_KADEME3 IN (SELECT ID_KADEME3 FROM #KADEME3)	
				ORDER BY AD					
			END
			ELSE
			BEGIN
					SELECT SD.ID_DERS, SD.AD 
					FROM v3SinavDers				SD
					INNER JOIN eokul_v2.dbo.Ders	D	ON	D.ID_DERS = SD.ID_DERS	
					where d.ID_KADEME3 = @ID_KADEME3 
						AND D.AKTIF = 1 
						AND D.SNVDERS = 1
				UNION
					SELECT D.ID_DERS,D.DERSAD 
					FROM eokul_v2.dbo.Ders			 D
					JOIN eokul_v2.dbo.DersEgitimTuru E ON E.ID_DERS = D.ID_DERS
					WHERE E.ID_EGITIMTURU = 6 -- YAZILI
						AND D.AKTIF =1 
						AND d.ID_KADEME3 = @ID_KADEME3
						AND D.SNVDERS = 1
				ORDER BY AD
			END
			
			DROP TABLE IF EXISTS #KADEME3	
		END
		IF @ISLEM = 8	--	UNITE EKLE EXCEL		
		BEGIN
			DROP TABLE IF EXISTS #JSEXEL
			DROP TABLE IF EXISTS #UNITE_VAR
			DROP TABLE IF EXISTS #UNITE_YOK

			SELECT KOD,AD	INTO #JSEXEL	FROM OPENJSON(@SQLJSON) WITH(KOD VARCHAR(MAX), AD VARCHAR(MAX)) JS 			
			SELECT JS.*		INTO #UNITE_VAR FROM OKYANUSDB.DBO.v3SinavDersUnite DU JOIN #JSEXEL JS ON JS.KOD = DU.KOD
			SELECT *		INTO #UNITE_YOK FROM #JSEXEL JS where JS.KOD NOT IN (SELECT DISTINCT V.KOD FROM #UNITE_VAR V)

			IF EXISTS (SELECT TOP 1 1 FROM #UNITE_YOK)
			BEGIN

				INSERT INTO OkyanusDB.dbo.v3SinavDersUnite (ID_DERS,KOD,AD,AKTIF)
				SELECT @ID_DERS, KOD, AD, 1 FROM #UNITE_YOK
					
			END

			IF EXISTS (SELECT TOP 1 1 FROM #UNITE_VAR)
			BEGIN

				UPDATE U SET
					U.AD = V.AD
				FROM OkyanusDB.dbo.v3SinavDersUnite U
				JOIN #UNITE_VAR V ON V.KOD = U.KOD

				--DECLARE @EKLENECEKLER INT = (SELECT COUNT(1) FROM #UNITE_YOK)
				--DECLARE @HATAMETNI VARCHAR(MAX) = 'Excel tablosundaki kodların tümü daha önce eklendiği için işlem yapılmamıştır.'
				--IF @EKLENECEKLER > 0
				--BEGIN
				--	SET @HATAMETNI = CAST(@EKLENECEKLER AS varchar)+' Adet ünite eklenmiştir. Aşağıdaki kodlar daha önce eklendiği için işlem yapılmamıştır.<br><br>'+(SELECT (SELECT STUFF((SELECT   '<br>' +CAST(K.KOD AS VARCHAR)	FROM #UNITE_VAR K ORDER BY KOD FOR XML PATH(''), TYPE).value('.', 'VARCHAR(MAX)'), 1, 4, '')))
				--END
								
				----SELECT @HATAMETNI
				--RAISERROR (@HATAMETNI , -- Message text.
				--16, -- Severity.
				--1-- State.
				--);
			END
			
			

			
			DROP TABLE IF EXISTS #JSEXEL
			DROP TABLE IF EXISTS #UNITE_VAR
			DROP TABLE IF EXISTS #UNITE_YOK
		END
		IF @ISLEM = 9	--	Derse ait Uniteleri Sil	
		BEGIN

				DELETE FROM OKYANUSDB.DBO.v3SinavDersUnite
				WHERE KOD NOT IN (
					select SA.KOD 
					from SinavAnahtar SA
				) AND ID_DERS = @ID_DERS

			SELECT 1

		END
	    IF @ISLEM = 10	--	YAZILI Ders Liste		
		BEGIN	
			SELECT d.ID_DERS, ED.DERSAD AD 
			FROM [dbo].[v3SinavDers] d
			JOIN eokul_v2.dbo.Ders	ED ON ED.ID_DERS = d.ID_DERS
			where d.ID_KADEME3=@ID_KADEME3 			
				AND ED.AKTIF =1 
				AND ED.SNVDERS = 1
			UNION 
			SELECT D.ID_DERS,D.DERSAD 
			FROM eokul_v2.dbo.Ders			 D
			JOIN eokul_v2.dbo.DersEgitimTuru E ON E.ID_DERS = D.ID_DERS
			WHERE E.ID_EGITIMTURU = 6 -- YAZILI
				AND D.AKTIF =1 
				AND d.ID_KADEME3=@ID_KADEME3 
				AND D.SNVDERS = 1
			ORDER BY AD
	    END
	    IF @ISLEM = 11	--	Sınav Ders Liste		
		BEGIN
			SELECT	DISTINCT DAK.ID_DERS
					,[Sınıf Düzeyi]		= K.AD 
					,[Ders Adı]			= D.AD

					,[Ünite Kodu]		= DU.KOD	
					,[Ünite Adı]		= DU.AD 
					
					,[Konu Kodu]		= DK.KOD	
					,[Konu Adı]			= DK.AD 
					
					,[Alt Konu Kodu]	= DAK.KOD	
					,[Alt Konu Adı]		= DAK.AD 

			FROM v3SinavDersUnite		DAK
			inner join v3SinavDers		SD  ON SD.ID_DERS	= DAK.ID_DERS
			inner join v3Ders			D	ON D.ID_DERS	= DAK.ID_DERS
			inner join v3Kademe3		K	ON K.ID_KADEME3 = SD.ID_KADEME3

			INNER JOIN v3SinavDersUnite DU	ON	DU.KOD		= SUBSTRING(DAK.KOD,1,6)
			INNER JOIN v3SinavDersUnite DK	ON	DK.KOD		= SUBSTRING(DAK.KOD,1,9)

			WHERE SD.ID_KADEME3=@ID_KADEME3 AND  DAK.ID_DERS = @ID_DERS AND DAK.AKTIF=1 AND LEN(DAK.KOD) = 12
			ORDER BY DAK.KOD
	    END
		IF @ISLEM = 12	--	UNITE LINK EXCEL		
		BEGIN
			DROP TABLE IF EXISTS #JSEXEL12

			SELECT KOD, LINK
			INTO #JSEXEL12	
			FROM OPENJSON(@SQLJSON) 
			WITH(KOD VARCHAR(MAX), LINK VARCHAR(MAX)) 
					
			UPDATE L SET
				L.AKTIF = 0 
			FROM OkyanusDB.DBO.v3SinavDersUniteLink L
			JOIN OkyanusDB.DBO.v3SinavDersUnite		U	ON	U.KOD	= L.KOD
			JOIN #JSEXEL12							J	ON	J.KOD	= U.KOD			
			WHERE U.ID_DERS	= @ID_DERS

			INSERT INTO OkyanusDB.DBO.v3SinavDersUniteLink (KOD, LINK, KYE_TCKIMLIKNO)
			SELECT J.KOD, LINK, @TCKIMLIKNO 
			FROM #JSEXEL12						J			
			JOIN OkyanusDB.DBO.v3SinavDersUnite	U	ON	U.KOD	= J.KOD	
			WHERE U.ID_DERS	= @ID_DERS

			
			DROP TABLE IF EXISTS #JSEXEL12
		END
		IF @ISLEM = 13	--	UNITE DOSYA LISTE		
		BEGIN

			SELECT ISNULL((
				SELECT ID_KAZANIMDOSYA, KOD, GUID
				FROM KazanimDosya
				WHERE	KOD		= @KOD
					AND AKTIF	= 1
				FOR JSON PATH
			),'[]')

		END
		IF @ISLEM = 14	--	UNITE DOSYA PASIF		
		BEGIN

			UPDATE KazanimDosya SET
				AKTIF = 0 
			WHERE ID_KAZANIMDOSYA = @ID_KAZANIMDOSYA

		END
		IF @ISLEM = 15	--	UNITE DOSYA EKLE		
		BEGIN

			DECLARE @GUID_DOSYA VARCHAR(36) = NEWID()
			DECLARE @TABLEADD15 TABLE (ID_KAZANIMDOSYA INT)
			
			WHILE EXISTS(SELECT TOP 1 1 FROM KazanimDosya D WHERE D.GUID = @GUID_DOSYA)
			BEGIN
				SET @GUID_DOSYA = NEWID()
			END

			INSERT INTO KazanimDosya (KOD, GUID, KYE_TCKIMLIKNO)
			OUTPUT inserted.ID_KAZANIMDOSYA INTO @TABLEADD15(ID_KAZANIMDOSYA)
			VALUES (@KOD, @GUID_DOSYA, @TCKIMLIKNO)

			SELECT	 GUID				= @GUID_DOSYA
					,ID_KAZANIMDOSYA	= (SELECT TOP 1 ID_KAZANIMDOSYA FROM @TABLEADD15)
			FOR JSON PATH


		END
	END
END TRY
BEGIN CATCH	
	SELECT 
		@ErrorSeverity	= ERROR_SEVERITY(),
		@ErrorState		= ERROR_STATE()
							
	SELECT @MSG = /*'Prosedür: ' + ISNULL(ERROR_PROCEDURE(), '') + ', Satır: ' + CAST(ERROR_LINE() as varchar) + ', Hata: ' +*/ ERROR_MESSAGE()
			
	RAISERROR (@MSG , -- Message text.
				@ErrorSeverity, -- Severity.
				@ErrorState -- State.
				);
END CATCH;
END
GO
PRINT N'Altering [dbo].[sp_DersUniteGetir]...';


GO
ALTER procedure [dbo].[sp_DersUniteGetir]
	
	@ID_DERS		INT			= NULL,
	@SADECEUNITE	BIT			= 0,
	@SADECEKAZANIM	BIT			= 0,
	@KOD			VARCHAR(MAX)= NULL
		
AS
BEGIN

BEGIN TRY    
	
	DECLARE @MSG			VARCHAR(4000)
	DECLARE @ErrorSeverity	INT
	DECLARE @ErrorState		INT
		
	
		SELECT DISTINCT D.ID_DERS, D.AD, S.ID_KADEME 
		INTO #DersKademe FROM V3SinavDers	D
		INNER JOIN v3KademeBilgi			S	ON S.ID_KADEME3 = D.ID_KADEME3
		WHERE ID_KADEME IN (SELECT DISTINCT K.ID_KADEME FROM v3SinavDers SD INNER JOIN OkyanusDB.DBO.v3KademeBilgi K ON K.ID_KADEME3=SD.ID_KADEME3 WHERE ID_DERS=@ID_DERS)  
			
		CREATE TABLE #DersListe (ID_DERS INT)

		DECLARE @DERSAD VARCHAR(MAX)
		SELECT @DERSAD = AD FROM V3SinavDers
		WHERE ID_DERS = @ID_DERS

		INSERT INTO #DersListe 
		SELECT @ID_DERS
		UNION
		SELECT 
		ID_DERS 
		FROM v3SinavDers 
		WHERE (AD = 'Türk Edebiyatı' OR AD = 'Türk Dili Edebiyatı' OR AD = 'Türk Dili ve Edebiyatı' OR AD = 'Dil ve Anlatım') AND @DERSAD IN ('Dil ve Anlatım', 'Türk Dili Edebiyatı', 'Türk Edebiyatı','Türk Dili ve Edebiyatı')
		UNION
		SELECT 
		ID_DERS 
		FROM v3SinavDers 
		WHERE (AD = 'Matematik' OR AD = 'Geometri') AND @DERSAD IN ('Geometri', 'Matematik')
		UNION
		SELECT -- Orta Okul
		ID_DERS 
		FROM v3SinavDers 
		WHERE AD IN ('Main Course','MEB English','İngilizce') AND @DERSAD IN ('Main Course','MEB English','İngilizce')
		UNION
		SELECT  -- Orta Okul
		ID_DERS 
		FROM v3SinavDers 
		WHERE AD IN ('T.C.İnkılap Tarihi Ve Atatürkçülük','Sosyal Bilgiler') AND @DERSAD IN ('T.C.İnkılap Tarihi Ve Atatürkçülük','Sosyal Bilgiler')
		UNION
		SELECT 
		ID_DERS 
		FROM v3SinavDers 
		WHERE AD IN ('Felsefe','Sosyoloji','Mantık','Psikoloji') AND @DERSAD IN ('Felsefe','Sosyoloji','Mantık','Psikoloji')
		UNION
		SELECT 
		ID_DERS 
		FROM v3SinavDers 
		WHERE AD = @DERSAD

IF @KOD IS NOT NULL
BEGIN
	SET @SADECEUNITE = 0
	SET @SADECEKAZANIM = 0
END
		
		CREATE TABLE #ValueTable (ID_DERS INT, KOD NVARCHAR(max), AD NVARCHAR(max))
		
		INSERT INTO #ValueTable(ID_DERS, KOD, AD)
		SELECT DU.ID_DERS, DU.KOD, DU.AD
		FROM v3SinavDersUnite	DU
		INNER JOIN #DersListe	DL	ON DL.ID_DERS	= DU.ID_DERS
		INNER JOIN #DersKademe	DK	ON DK.ID_DERS	= DL.ID_DERS
		--WHERE @KOD IS NULL OR DU.KOD = @KOD		
		WHERE	(@KOD IS NULL OR	DU.KOD = @KOD )
			AND (	@SADECEUNITE = 0
				OR	(		@KOD IS NULL 
						AND @SADECEUNITE = 1 
						AND LEN(DU.KOD ) = 6
					)
			)
			AND (	@SADECEKAZANIM = 0
				OR	(		@KOD IS NULL 
						AND @SADECEKAZANIM = 1 
						AND LEN(DU.KOD ) = 12
					)
			)
			AND AKTIF = 1
		
		
		SELECT
			 ID_DERS
			,KOD
			,AD
			,SECILEBILIR = CASE WHEN (SELECT COUNT(1) FROM #ValueTable T WHERE T.ID_DERS = V.ID_DERS AND V.KOD = LEFT(T.KOD, LEN(V.KOD))) = 1 THEN 1 ELSE 0 END
		FROM #ValueTable	V
		ORDER BY KOD

		DROP TABLE #ValueTable
		DROP TABLE #DersListe
		DROP TABLE #DersKademe


	END TRY
			BEGIN CATCH
			
				SELECT 
					@ErrorSeverity	= ERROR_SEVERITY(),
					@ErrorState		= ERROR_STATE()
							
				SELECT @MSG = /*'Prosedür: ' + ISNULL(ERROR_PROCEDURE(), '') + ', Satır: ' + CAST(ERROR_LINE() as varchar) + ', Hata: ' +*/ ERROR_MESSAGE()
			
				RAISERROR (@MSG , -- Message text.
							@ErrorSeverity, -- Severity.
							@ErrorState -- State.
							);
			END CATCH;
	
	END
GO
PRINT N'Refreshing [dbo].[sp_Sinav]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_Sinav]';


GO
PRINT N'Refreshing [dbo].[sp_Sinav2]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_Sinav2]';


GO
PRINT N'Reenabling DDL triggers...'
GO
ENABLE TRIGGER [CaptureStoredProcedureChanges] ON DATABASE
GO
PRINT N'Update complete.';


GO
